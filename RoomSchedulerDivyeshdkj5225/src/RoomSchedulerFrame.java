
import java.sql.Date;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author acv
 */
public class RoomSchedulerFrame extends javax.swing.JFrame
{

    
    /**
     * Creates new form RoomSchedulerFrame
     */
    public RoomSchedulerFrame()
    {
        initComponents();
        
        // Load the combo boxes with data.
        rebuildFacultyComboBoxes();
        rebuildDateComboBoxes();
        rebuildRoomComboBoxes();
        rebuildReservationsComboBoxes();
        
        // Write appropriate text areas
        rewriteStatusWaitlistTextArea();
        
    }
    
    public void rebuildFacultyComboBoxes()
    {
        reserveFacultyComboBox.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray()));
        reservationsFacultyComboBox.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray()));
    }
    
    public void rebuildDateComboBoxes()
    {
        reserveDateComboBox.setModel(new javax.swing.DefaultComboBoxModel(Dates.getDatesList().toArray()));
        statusDateComboBox.setModel(new javax.swing.DefaultComboBoxModel(Dates.getDatesList().toArray()));
    }
    
    public void rebuildRoomComboBoxes(){
        dropRoomComboBox.setModel(new javax.swing.DefaultComboBoxModel(RoomQueries.getAllRooms().toArray()));
    }
    
    public void rebuildReservationsComboBoxes(){ 
        
        //Find reservations per selected faculty member
        try{
        String faculty = reservationsFacultyComboBox.getSelectedItem().toString();        
        ArrayList<ReservationEntry> reservations = ReservationQueries.getReservationsByFaculty(faculty);
        ArrayList<WaitlistEntry> waitlistEntries = WaitlistQueries.getWaitlistByFaculty(faculty);
        
        reservationsReservationsComboBox.setModel(new javax.swing.DefaultComboBoxModel(reservations.toArray()));
        reservationsWaitlistComboBox.setModel(new javax.swing.DefaultComboBoxModel(waitlistEntries.toArray()));
        }catch(NullPointerException e){}
    }
    
    public void rewriteStatusWaitlistTextArea(){
        statusWaitlistTextArea.setText(null);
        ArrayList<WaitlistEntry> waitlist;
        
        // Obtain waitlists as objects
        waitlist = WaitlistQueries.getWaitlist();
        
        for(WaitlistEntry e : waitlist){            
            statusWaitlistTextArea.insert(e.toString() + "\n", 0);
        }        
        
        statusWaitlistTextArea.insert("Faculty \t Date \t Seats\n", 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        datePanel = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        addFacultyTextField = new javax.swing.JTextField();
        addFacultyButton = new javax.swing.JButton();
        addFacultyStatusLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        addDateSpinner = new javax.swing.JSpinner();
        submitNewDate = new javax.swing.JButton();
        addDateStatusLabel = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        addRoomNameTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        addRoomSpinner = new javax.swing.JSpinner();
        addRoomSubmit = new javax.swing.JButton();
        addRoomStatusLabel1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        dropRoomComboBox = new javax.swing.JComboBox<>();
        dropRoomButton = new javax.swing.JButton();
        dropRoomStatusLabel1 = new javax.swing.JLabel();
        dropRoomStatusLabel2 = new javax.swing.JLabel();
        dropRoomStatusLabel3 = new javax.swing.JLabel();
        addRoomStatusLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        reserveFacultyComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        reserveDateComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        reserveSeatsTextField = new javax.swing.JTextField();
        reserveSubmitButton = new javax.swing.JButton();
        reserveStatusLabel = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        reservationsFacultyComboBox = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        reservationsReservationsComboBox = new javax.swing.JComboBox<>();
        deleteReservationButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        deleteWaitlistButton = new javax.swing.JButton();
        reservationsWaitlistComboBox = new javax.swing.JComboBox<>();
        reservationsStatusLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        statusDateComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        statusReservationTextArea = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        statusWaitlistTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Room Scheduler");

        jLabel2.setText("Faculty Name: ");

        addFacultyTextField.setColumns(20);

        addFacultyButton.setText("Submit");
        addFacultyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFacultyButtonActionPerformed(evt);
            }
        });

        addFacultyStatusLabel.setText("    ");

        jLabel7.setText("   ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addFacultyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(addFacultyButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addFacultyStatusLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)))
                .addContainerGap(249, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(addFacultyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(addFacultyButton)
                .addGap(18, 18, 18)
                .addComponent(addFacultyStatusLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap(364, Short.MAX_VALUE))
        );

        datePanel.addTab("Add Faculty", jPanel1);

        jLabel9.setText("Add Date:");

        addDateSpinner.setModel(new javax.swing.SpinnerDateModel());

        submitNewDate.setText("Submit");
        submitNewDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitNewDateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addDateStatusLabel)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(submitNewDate)))
                .addContainerGap(221, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(addDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitNewDate))
                .addGap(50, 50, 50)
                .addComponent(addDateStatusLabel)
                .addContainerGap(407, Short.MAX_VALUE))
        );

        datePanel.addTab("Add Date", jPanel4);

        jLabel10.setText("New Room Name:");

        jLabel11.setText("New Room Size:");

        addRoomSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        addRoomSubmit.setText("Submit");
        addRoomSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomSubmitActionPerformed(evt);
            }
        });

        jLabel15.setText("Add a new room");

        jLabel16.setText("Drop an existing room");

        jLabel17.setText("Select Room to Drop:");

        dropRoomComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dropRoomButton.setText("Submit");
        dropRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropRoomButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addRoomStatusLabel2)
                    .addComponent(dropRoomStatusLabel3)
                    .addComponent(dropRoomStatusLabel2)
                    .addComponent(dropRoomStatusLabel1)
                    .addComponent(dropRoomButton)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(dropRoomComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel16)
                    .addComponent(jLabel15)
                    .addComponent(addRoomStatusLabel1)
                    .addComponent(addRoomSubmit)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(addRoomSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addRoomNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(252, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(addRoomNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(addRoomSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addRoomSubmit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addRoomStatusLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addRoomStatusLabel2)
                .addGap(22, 22, 22)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(dropRoomComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(dropRoomButton)
                .addGap(32, 32, 32)
                .addComponent(dropRoomStatusLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dropRoomStatusLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dropRoomStatusLabel3)
                .addContainerGap(183, Short.MAX_VALUE))
        );

        datePanel.addTab("Rooms", jPanel5);

        jLabel4.setText("Faculty: ");

        jLabel5.setText("Date: ");

        jLabel6.setText("Seats Required: ");

        reserveSeatsTextField.setColumns(3);

        reserveSubmitButton.setText("Submit");
        reserveSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveSubmitButtonActionPerformed(evt);
            }
        });

        reserveStatusLabel.setText("   ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(reserveFacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(reserveDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(reserveSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(reserveSubmitButton)
                            .addGap(26, 26, 26)))
                    .addComponent(reserveStatusLabel))
                .addContainerGap(363, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(reserveFacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(reserveDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(reserveSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(reserveSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(reserveStatusLabel)
                .addContainerGap(315, Short.MAX_VALUE))
        );

        datePanel.addTab("Reserve Room", jPanel2);

        jLabel12.setText("Faculty:");

        reservationsFacultyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        reservationsFacultyComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservationsFacultyComboBoxActionPerformed(evt);
            }
        });

        jLabel13.setText("Reservations:");

        reservationsReservationsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        deleteReservationButton.setText("Delete Reservation");
        deleteReservationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteReservationButtonActionPerformed(evt);
            }
        });

        jLabel14.setText("Waitlist:");

        deleteWaitlistButton.setText("Delete Waitlist Entry");
        deleteWaitlistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteWaitlistButtonActionPerformed(evt);
            }
        });

        reservationsWaitlistComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reservationsStatusLabel)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(reservationsWaitlistComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(reservationsReservationsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(78, 78, 78)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deleteWaitlistButton)
                                    .addComponent(deleteReservationButton)))
                            .addComponent(reservationsFacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(reservationsFacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(reservationsReservationsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteReservationButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(reservationsWaitlistComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(deleteWaitlistButton))
                .addGap(36, 36, 36)
                .addComponent(reservationsStatusLabel)
                .addContainerGap(343, Short.MAX_VALUE))
        );

        datePanel.addTab("Reservations", jPanel6);

        jLabel3.setText("Reservations by Date: ");

        statusDateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        statusDateComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusDateComboBoxActionPerformed(evt);
            }
        });

        statusReservationTextArea.setEditable(false);
        statusReservationTextArea.setColumns(20);
        statusReservationTextArea.setRows(5);
        jScrollPane2.setViewportView(statusReservationTextArea);

        jLabel8.setText("Waiting List");

        statusWaitlistTextArea.setEditable(false);
        statusWaitlistTextArea.setColumns(20);
        statusWaitlistTextArea.setRows(5);
        jScrollPane1.setViewportView(statusWaitlistTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(30, 30, 30)
                                .addComponent(statusDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel8))
                        .addGap(0, 284, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(statusDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(170, Short.MAX_VALUE))
        );

        datePanel.addTab("Status (All)", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(datePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datePanel)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addFacultyButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addFacultyButtonActionPerformed
    {//GEN-HEADEREND:event_addFacultyButtonActionPerformed
        // Add the faculty to the faculty table.
        String name = addFacultyTextField.getText();
        Faculty.addFaculty(name);
        addFacultyStatusLabel.setText(name + " has been added to the Faculty.");
        
        // rebuild the reservation faculty combo box.
        rebuildFacultyComboBoxes();

    }//GEN-LAST:event_addFacultyButtonActionPerformed

    private void reserveSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveSubmitButtonActionPerformed
        // Obtain selected name, date, size
        String name = reserveFacultyComboBox.getSelectedItem().toString();
        String date = reserveDateComboBox.getSelectedItem().toString();
        int size = Integer.parseInt(reserveSeatsTextField.getText());
        
        // Give values to ReservationEntry
        ReservationEntry entry = new ReservationEntry(name, date, size);
        
        // If the room value is null, update reserveStatusLabel with room and date        
        // Else (they're on the wait list), update reserveStatusLabel with date
        if(entry.getRoom() != null){
            reserveStatusLabel.setText("You have been reserved for " + 
                    entry.getRoom() + " at " + date);
        } else {
            reserveStatusLabel.setText("As rooms are occupied, you have been"
                    + " waitlisted on " + date);
        }
        
        // Update appropriate text areas
        rewriteStatusWaitlistTextArea();
        rebuildReservationsComboBoxes();
    }//GEN-LAST:event_reserveSubmitButtonActionPerformed

    private void statusDateComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusDateComboBoxActionPerformed
        // Clear text area
        statusReservationTextArea.setText(null);
        String date = statusDateComboBox.getSelectedItem().toString();
        ArrayList<ReservationEntry> reservations;
        
        // Obtain reservations as objects
        reservations = ReservationQueries.getReservationsByDate(date);
        
        for(ReservationEntry e : reservations){            
            statusReservationTextArea.insert(e.toString() + "\n", 0);
        }        
        
        statusReservationTextArea.insert("Faculty \t Room \t Date\n", 0);
    }//GEN-LAST:event_statusDateComboBoxActionPerformed

    private void submitNewDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitNewDateActionPerformed
        // Convert Date to useable format, then add it
        SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
        String spinnerValue = formater.format(addDateSpinner.getValue());
        Date day = Date.valueOf(spinnerValue);
        
        Dates.addDate(day.toString());
        addDateStatusLabel.setText(day.toString() + " has been added");
        rebuildDateComboBoxes();
    }//GEN-LAST:event_submitNewDateActionPerformed

    private void addRoomSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomSubmitActionPerformed
        // Add given room to system
        String roomName = addRoomNameTextField.getText();
        int roomSize = Integer.parseInt(addRoomSpinner.getValue().toString());
        RoomEntry room = new RoomEntry(roomName, roomSize);
        
        RoomQueries.addRoom(room);
        
        // Display the takers
        ArrayList<ReservationEntry> reservations = ReservationQueries.getReservationsByRoom(roomName);
        ArrayList<String> people = new ArrayList<String>();
        
        addRoomStatusLabel1.setText(roomName +" with " + roomSize + " seats has been added");
        if(!reservations.isEmpty()){
            for(ReservationEntry r : reservations){
                people.add(r.getFaculty());
            }
            int length = people.toString().length();
            addRoomStatusLabel2.setText(people.toString().substring(1, length-1) +" took the new room");
        }
                
        
        
        rebuildRoomComboBoxes();
        rebuildReservationsComboBoxes();
        rewriteStatusWaitlistTextArea();
    }//GEN-LAST:event_addRoomSubmitActionPerformed

    private void deleteReservationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteReservationButtonActionPerformed
        // Delete selected reservation
        ReservationEntry reservation = (ReservationEntry) reservationsReservationsComboBox.getSelectedItem();
        
        ReservationQueries.deleteReservationEntry(reservation);
        
        
        // Refresh the waitlist to see if anyone fits the open reservation.
        WaitlistQueries.refreshWaitlist();
        
        // To see whether or not a waitlist entry took the reservation
        int check = 0;
        ArrayList<ReservationEntry> newReservations = ReservationQueries.getReservationsByDate(reservation.getDate());
        for(ReservationEntry r : newReservations){            
            if(r.getRoom().equals(reservation.getRoom())){
                reservationsStatusLabel.setText("The selected reservation was cancelled and given to " + r.getFaculty());
                check++;
            }            
        }
        
        if(check == 0){
            reservationsStatusLabel.setText("The selected reservation was cancelled, though hasn't been taken by anyone on the waitlist");
        }     
        
        rebuildReservationsComboBoxes();
        rewriteStatusWaitlistTextArea();
    }//GEN-LAST:event_deleteReservationButtonActionPerformed

    private void deleteWaitlistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteWaitlistButtonActionPerformed
        // Delete selected waitlist entry
        WaitlistEntry waitlist = (WaitlistEntry) reservationsWaitlistComboBox.getSelectedItem();
        
        WaitlistQueries.deleteWaitlistEntry(waitlist);
        
        reservationsStatusLabel.setText("The selected waitlist entry was cancelled");
        rebuildReservationsComboBoxes();
        rewriteStatusWaitlistTextArea();
    }//GEN-LAST:event_deleteWaitlistButtonActionPerformed

    private void dropRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropRoomButtonActionPerformed
        // Drop the selected room
        RoomEntry room = (RoomEntry) dropRoomComboBox.getSelectedItem();
        ArrayList<ReservationEntry> reservations = ReservationQueries.getReservationsByRoom(room.getName());
                
        RoomQueries.dropRoom(room);
        
        //Split list into those who were added to reservations and those who weren't
        ArrayList<String> reserved = new ArrayList<String>();
        ArrayList<String> waitlisted = new ArrayList<String>();
        
        for(ReservationEntry r : reservations){
            ArrayList<ReservationEntry> facRes = ReservationQueries.getReservationsByFaculty(r.getFaculty());
            int length = reserved.size();
            
            for(ReservationEntry f: facRes){
                if(r.getDate().equals(f.getDate())){
                    reserved.add(r.getFaculty());
                }
            }
            
            if(reserved.size() == length)
                waitlisted.add(r.getFaculty());
        }
        
        //Display results        
        int reservedLength = reserved.toString().length();
        int waitlistedLength = waitlisted.toString().length();
        
        dropRoomStatusLabel1.setText("The room has been dropped");
        if(reserved.isEmpty())
            dropRoomStatusLabel2.setText("No one has reserved a new room");
        else
            dropRoomStatusLabel2.setText(reserved.toString().substring(1, reservedLength-1) + " has been reserved to a new room");
        if(waitlisted.isEmpty())
            dropRoomStatusLabel3.setText("No one has been added to the waitlist");
        else
            dropRoomStatusLabel3.setText(waitlisted.toString().substring(1, waitlistedLength-1) + " has been waitlisted");
        
        rebuildRoomComboBoxes();
        rebuildReservationsComboBoxes();
        rewriteStatusWaitlistTextArea();
    }//GEN-LAST:event_dropRoomButtonActionPerformed

    private void reservationsFacultyComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservationsFacultyComboBoxActionPerformed
        // Rebuild combo boxes when new faculty is selected        
        rebuildReservationsComboBoxes();
    }//GEN-LAST:event_reservationsFacultyComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new RoomSchedulerFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner addDateSpinner;
    private javax.swing.JLabel addDateStatusLabel;
    private javax.swing.JButton addFacultyButton;
    private javax.swing.JLabel addFacultyStatusLabel;
    private javax.swing.JTextField addFacultyTextField;
    private javax.swing.JTextField addRoomNameTextField;
    private javax.swing.JSpinner addRoomSpinner;
    private javax.swing.JLabel addRoomStatusLabel1;
    private javax.swing.JLabel addRoomStatusLabel2;
    private javax.swing.JButton addRoomSubmit;
    private javax.swing.JTabbedPane datePanel;
    private javax.swing.JButton deleteReservationButton;
    private javax.swing.JButton deleteWaitlistButton;
    private javax.swing.JButton dropRoomButton;
    private javax.swing.JComboBox<String> dropRoomComboBox;
    private javax.swing.JLabel dropRoomStatusLabel1;
    private javax.swing.JLabel dropRoomStatusLabel2;
    private javax.swing.JLabel dropRoomStatusLabel3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> reservationsFacultyComboBox;
    private javax.swing.JComboBox<String> reservationsReservationsComboBox;
    private javax.swing.JLabel reservationsStatusLabel;
    private javax.swing.JComboBox<String> reservationsWaitlistComboBox;
    private javax.swing.JComboBox<String> reserveDateComboBox;
    private javax.swing.JComboBox<String> reserveFacultyComboBox;
    private javax.swing.JTextField reserveSeatsTextField;
    private javax.swing.JLabel reserveStatusLabel;
    private javax.swing.JButton reserveSubmitButton;
    private javax.swing.JComboBox<String> statusDateComboBox;
    private javax.swing.JTextArea statusReservationTextArea;
    private javax.swing.JTextArea statusWaitlistTextArea;
    private javax.swing.JButton submitNewDate;
    // End of variables declaration//GEN-END:variables
}
